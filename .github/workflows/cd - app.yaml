name: CD - app

on: [workflow_dispatch]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Build updater image with Docker
        run: docker build -t updater:latest --build-arg MODE='onefile --onefile-tempdir-spec=../Cache' .

      - name: Extract single binary
        run: |
          CONTAINER_ID=$(docker create updater:latest)
          docker cp $CONTAINER_ID:/opt/updater-linux-x64.bin .
          docker rm $CONTAINER_ID

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: updater-Linux
          path: updater-linux-x64.bin

  build:
    strategy:
      matrix:
        os: [windows-2022, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          mode: onefile
          onefile-tempdir-spec: ../Cache
          deployment: true
          assume-yes-for-downloads: true
          python-flag: -OO
          output-file: >
            updater-
            ${RUNNER_OS,,}-
            ${RUNNER_ARCH,,}.
            ${{ runner.os == 'Windows' && 'exe' || 'bin' }}
          script-name: updater.py

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: updater-${{ runner.os }}
          path: |
            build/*.exe
            build/*.bin

  create_release:
    needs: [build-linux, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v5
        with:
          name: updater-Linux
          path: release_artifacts

      - name: Download Windows artifact
        uses: actions/download-artifact@v5
        with:
          name: updater-Windows
          path: release_artifacts

      - name: Download macOS artifact
        uses: actions/download-artifact@v5
        with:
          name: updater-macOS
          path: release_artifacts

      - name: Compute semantic version
        id: version
        run: |
          BUILD_NUMBER=$(($GITHUB_RUN_NUMBER + $GITHUB_RUN_ATTEMPT - 9))
          echo "v=v2.$(($BUILD_NUMBER / 10)).$(($BUILD_NUMBER % 10))" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b
        with:
          artifacts: release_artifacts/*
          body: Source code (zip) and Source code (tar.gz) were auto-generated by GitHub and contain the uncompiled scripts
          commit: main
          name: MF-updater ${{ steps.version.outputs.v }}
          tag: ${{ steps.version.outputs.v }}
