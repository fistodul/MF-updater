name: CD - app

on: [workflow_dispatch]

env:
  PYTHON_VERSION: 3.13

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: pip install nuitka

      - name: Compile to single binary
        run: nuitka --python-flag=-OO --onefile --output-filename=updater-linux-amd64 updater.py

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: updater-linux
          path: updater-linux-amd64

  build-windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: pip install nuitka

      - name: Compile to single binary
        run: nuitka --python-flag=-OO --onefile --output-filename=updater-windows-amd64.exe updater.py

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: updater-windows
          path: updater-windows-amd64.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: pip install nuitka

      - name: Compile to single binary
        run: nuitka --python-flag=-OO --onefile --output-filename=updater-macos-arm64 updater.py

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: updater-macos
          path: updater-macos-arm64

  create_release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download linux artifact
        uses: actions/download-artifact@v4
        with:
          name: updater-linux
          path: release_artifacts

      - name: Download windows artifact
        uses: actions/download-artifact@v4
        with:
          name: updater-windows
          path: release_artifacts

      - name: Download mac artifact
        uses: actions/download-artifact@v4
        with:
          name: updater-macos
          path: release_artifacts

      - name: Compute semantic version
        id: version
        run: |
          BUILD_NUMBER=$(($GITHUB_RUN_NUMBER + $GITHUB_RUN_ATTEMPT - 3))
          echo "v=v2.$(($BUILD_NUMBER / 10)).$(($BUILD_NUMBER % 10))" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b
        with:
          artifacts: release_artifacts/*
          body: Source code (zip) and Source code (tar.gz) were auto-generated by GitHub and contain the uncompiled scripts
          commit: main
          name: MF-updater ${{ steps.version.outputs.v }}
          tag: ${{ steps.version.outputs.v }}
